version: '3'
services:
  mariadb:
    image: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    volumes:
      - type: volume
        source: /data/mysql
        target: /var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql_root_pass
      MYSQL_DATABASE: db_name
      MYSQL_USER: user_name
      MYSQL_PASSWORD: user_pass
    restart: always
  wordpress:
    image: wordpress:php7.3-fpm-alpine
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    volumes:
      - type: volume
        source: /data/html
        target: /var/www/html
    depends_on:
      - mariadb
    environment:
      WORDPRESS_DB_HOST: mysql
      MYSQL_ROOT_PASSWORD: mysql_root_pass
      WORDPRESS_DB_NAME: db_name
      WORDPRESS_DB_USER: user_name
      WORDPRESS_DB_PASSWORD: user_pass
      WORDPRESS_TABLE_PREFIX: wp_
    links:
      - mariadb
    restart: always
  nginx:
    # image: nginx:alpine
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    volumes:
      - type: volume
        source: /data/html
        rarget: /var/www/html
      - nginx:/etc/nginx/conf.d
    ports:
      - 8080:80
    links:
      - wordpress

# version: '3'

# services:
#   version: '3'
# services:
#   mysql:
#     image: mariadb
#     volumes:
#       - /data/mysql:/var/lib/mysql
#     environment:
#       MYSQL_ROOT_PASSWORD: mysql_root_pass
#       MYSQL_DATABASE: db_name
#       MYSQL_USER: user_name
#       MYSQL_PASSWORD: user_pass
#     restart: always
#   wordpress:
#     depends_on:
#       - db
#     image: wordpress:latest
#     build: ./requirements/wordpress/
#     ports:
#       - "8000:80"
#     restart: always
#     environment:
#       WORDPRESS_DB_HOST: db:3306
#       WORDPRESS_DB_USER: wordpress
#       WORDPRESS_DB_PASSWORD: wordpress
#       WORDPRESS_DB_NAME: wordpress
#   web:
#     image: nginx
#     # container_name: nginx
#     restart: always
#     build: ./requirements/nginx/
#     volumes:
#     - ./templates:/etc/nginx/templates
#     ports:
#     - "8080:80"
#     #  - "8080:443"
#     environment:
#     - NGINX_HOST=foobar.com
#     - NGINX_PORT=80
#     # entrypoint: ps aux

# volumes:
#   db_data: {}
